use_lgpl_license('Bo Qin')
library(usethis)
use_lgpl_license('Bo Qin')
linear_model <- function(form, data, constants = NULL){
if(!is.null(constants)){
#however you want to deal with the factor levels
}
#Make a model matrix
X <- model.matrix(form, data)
Y <- matrix(data[,1],ncol = 1)
beta_k <- matrix(1, ncol = 1, nrow = ncol(data)+1)
beta_k_new <- matrix(18, ncol = 1, nrow = ncol(data)+1)
print(beta_k)
while(!isTRUE(all.equal(beta_k, beta_k_new, tolerance = 1e-6))){
beta_k <- beta_k_new
F(beta_k_new, Y, X)
beta_k_new <- beta_k -  0.0001 * dF(beta_k_new, Y, X)
}
while(!isTRUE(all.equal(beta_k, beta_k_new, tolerance = 1e-10))){
beta_k <- beta_k_new
F(beta_k_new, Y, X)
beta_k_new <- beta_k -  0.000001 * dF(beta_k_new, Y, X)
}
return(beta_k_new)
}
linear_model(Sepal.Length ~ ., iris)
df = data('iris')
df
library(palmerpenguins)
data(penguins)
df = data(penguins)
df
penguins
penguins
table(penguins$island)
fit = lm(bil_length ~ ., data = penguins[,-8])
fit = lm(bill_length ~ ., data = penguins[,-8])
fit = lm(bill_length_mm ~ ., data = penguins[,-8])
fit
fit$coefficients
library(devtools)
document()
bis557::fit
bis557::grab_coeffs()
document()
?grab_coeffs()
?grab_coeffs
R
install()
document()
document()
?grab_coeffs()
View(fit)
use_testthat()
document()
ls
